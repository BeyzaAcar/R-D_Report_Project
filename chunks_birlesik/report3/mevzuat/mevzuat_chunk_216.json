{
  "source_file": "report3.txt",
  "category": "mevzuat",
  "chunk_index": 216,
  "chunk_text": "Uygulama tamamlandığında İhtiyaç Analiz, Fonksiyonel ve Teknik Tasarım dokümanları oluşacaktır. Aşağıda proje geliştirme sürecinde yapılacak çalışmalar belirtilmiştir. - Scrum metodolojisi kullanılarak çevik proje gerçekleştirimi sağlanacaktır. - Uygulama geliştirme aşamasında kullanılacak araçların hızlı bir şekilde değiştirilebilmesi ve güncel teknolojilere hızlıca adapte olunabilmesi için yüksek ölçüde otomasyonlaştırılmış Public/Private Cloud’a geçilmesi hedeflenmektedir. - Geliştirme aşamasında işlerin takip edilebilmesi ve analiz çalışmaları sonucunda ortaya çıkan dokümanların saklanması için Jira ve Confluence uygulama araçları kullanılacaktır. - Geliştirme sürecinde kullanılacak araçlar, izlenecek yöntemlerle ilgili proje ekibinin bilinçlenmesini sağlayacak eğitimler aldırılacaktır. - Olası proje ekipleri yetkinliğine bağlı olarak açık kaynak kodlaması tercih edilecektir(.Net Core, Java, Groovy, Go vs.). - Süreç işleme aşamalarındaki karar mekanizmalarının hızlı çalışabilmesi için gerekli teknik altyapı oluşturulmalıdır. Bu amaçla, ilişkisel veri tabanları yerine obje veri tabanları, in-memory çalışan sistemler geliştirme esnasında çıkan ihtiyaçlara göre kullanılabilecektir. - Uygulama geliştirme mimarisi olarak mikro servis / sunucusuz fonksiyonlarla geliştirme opsiyonları tercih edilecektir. - İş akışlarının ön yüzden dinamik bir şekilde kullanıcının oluşturabilmesi için dünyaca standart olarak kabul edilen BPMN formatına uygun motor geliştirilecek ve ön yüzden kontrol edilebilecektir. - İhtiyaç duyulan fonksiyonlar için önerme, öngörü, uyarı tarzı mesajlar uygulama dışında sürekli çalışacak olan bir motor tarafından analiz edilip gerçek zamana en yakın olabilecek performansta tekrar uygulamaya gönderilecektir. Bunun için; çalışma yüküne göre kendini dinamik olarak büyütebilen sistemler oluşturulmalıdır. - Veri değişmezlik (immutable) özelliği içeren veritabanı özellikleri ile çalışılacaktır. Hiçbir veri üzerinde güncelleme olmadan zaman damgalı bir şekilde veriler tutulacaktır. Geçmişe yönelik her hangi bir zamandaki verilere anlık olarak ulaşılabilinecektir. - Konektor yapısı ile her fonksiyonun tek başına çalışabilirliği sağlanacak olup, oluşturulacak API’lar ile uygulama içine modüller(plug-and-play) eklenebilecektir. - Test otomasyonu süreçleri kullanılacak.",
  "char_len": 2313,
  "sentence_count": 6
}